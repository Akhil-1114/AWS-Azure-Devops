Docker

01.) Pipeline was failing at docker stage

02.) Code was passing through multiple tools in the pipeline and failing at docker

03.) Docker is a jar file which has been converted to an image and to an container

04.) Java code of 10gb is converted into a jar which contains all the applications, files, modules, library, dependencies

05.) Java code is converted into jar with the help of maven

06.) Deploy the jar in 2 servers where each server is raising with 10k requests per second.

07.) To overcome scalability of servers we come up with containers defined with id, size, os flavours, price, reciept(docker file (image)), stored properly, security, proper isolation, reliability

08.) Jar is converted into a container

09.) Docker file(image) contains name of the person, commands, expose, run, copy, cmd, entrypoint, size, time and date, type, location, quality, ID

10.) Docker file is used to convert jar into an image and converted into container

11.) Image is transferred with the help of jfrog or dockerhub

12.) 5 main components of docker architecture

13.) Client, Daemon, Registry, Image, Container

14.) Client is a black terminal cmd prompt where commands provided are converted into container

15.) Commands provided in docker client are communicating in Docker software (docker host) having daemons

16.) Daemon handles processes for application to be running in the background

17.) client level docker build convert dockerfile into an image by communicating with docker daemon

18.) client level docker pull from registry of jfrog or dockerhub to laptop by communicating with docker daemon

19.) client level docker run will convert image to container by communicating with docker daemon

20.) Docker depends on docker file

21.) we had a file converted into jar using maven 

22.) When we get requests from testers or developers we have to create jenkins file then docker file and kubernetes manifest file

23.) https://github.com/praveen1994dec/Java_app_3.0

24.) Docker file is a set of instructions to docker what to do

25.) Scale 1 linux server to 100 linux servers in form of containers using docker file 

26.) containers have cgroups which handles resources

27.) 